# Configuración para el frontend
server {
    listen 80;
    server_name www.arounadaly.mooo.com;

    # Redireccionar HTTP a HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name www.arounadaly.mooo.com;

    # Configuración SSL (se completará con Certbot)
    # ssl_certificate /etc/letsencrypt/live/www.arounadaly.mooo.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/www.arounadaly.mooo.com/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Directorio raíz para servir archivos estáticos del frontend
    root /home/ubuntu/web_project_api_full/frontend/build;
    index index.html;

    # Configuración para React Router
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Caché para archivos estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000";
    }
}

# Configuración para el backend
server {
    listen 80;
    server_name api.backaround.mooo.com;

    # Redireccionar HTTP a HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name api.backaround.mooo.com;

    # Configuración SSL (se completará con Certbot)
    # ssl_certificate /etc/letsencrypt/live/api.backaround.mooo.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/api.backaround.mooo.com/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Proxy para el backend
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
